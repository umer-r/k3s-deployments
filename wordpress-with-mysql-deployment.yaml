# kubectl create ns wordpress-k3s
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-k3s

---

# kubectl create secret generic wp-secret --namespace=wordpress-k3s --from-literal=password="wordpress-user-passwd" --from-literal=db_user="wordpress-user"
apiVersion: v1
kind: Secret
metadata:
  name: wp-secret
  namespace: wordpress-k3s
data:
  db_user: wordpress-user
  password: wordpress-user-passwd

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: wordpress-pv
spec:
  capacity:
    storage: 5Gi  # Adjust accordingly
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/kube/wordpress-k3s"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: ""

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:5.8.3-php7.4-apache
          ports:
            - containerPort: 80
              name: wordpress
          env:
            - name: WORDPRESS_DB_HOST
              value: "mysql.mysql-k3s.svc.cluster.local:3306"     # fqnd of msyql service.
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: wp-secret
                  key: db_user
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wp-secret
                  key: password
            - name: WORDPRESS_DB_NAME
              value: "wordpress"                                  # WordPress database name
          volumeMounts:
            - name: wordpress-persistent-storage
              mountPath: /var/www/html
      volumes:
        - name: wordpress-persistent-storage
          persistentVolumeClaim:
            claimName: wordpress-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
  namespace: wordpress-k3s
spec:
#  type: NodePort           # use for testing.
  selector:
    app: wordpress
  ports:
    - port: 80             
      targetPort: 80       
#      nodePort: 30001      # use for testing.

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress-ing
  namespace: wordpress-k3s
spec:
  ingressClassName: traefik
  rules:
  - host: wordpress.local         # change to domain.
    http:
      paths:
      - backend:
          service:
            name: wordpress-svc
            port:
              number: 80
        path: /
        pathType: Prefix